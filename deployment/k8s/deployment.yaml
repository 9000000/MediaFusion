apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediafusion-deployment
spec:
  replicas: 10
  selector:
    matchLabels:
      app: mediafusion
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: mediafusion
    spec:
      containers:
      - name: mediafusion
        image: mhdzumair/mediafusion:v3.7.4
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "800Mi"
            cpu: "200m"
        env:
          - name: MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: MONGO_URI
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: SECRET_KEY
          - name: PREMIUMIZE_OAUTH_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PREMIUMIZE_OAUTH_CLIENT_ID
          - name: PREMIUMIZE_OAUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PREMIUMIZE_OAUTH_CLIENT_SECRET
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PROWLARR_API_KEY
          - name: HOST_URL
            value: "https://mediafusion.fun"
          - name: PROWLARR_IMMEDIATE_MAX_PROCESS
            value: "3"
          - name: REDIS_URL
            value: "redis://redis-service:6379"
          - name: db_max_connections
            value: "30"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 60
          failureThreshold: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dramatiq-worker-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dramatiq-worker
  template:
    metadata:
      labels:
        app: dramatiq-worker
    spec:
      containers:
      - name: dramatiq-worker
        image: mhdzumair/mediafusion:v3.7.4
        command: ["pipenv", "run", "dramatiq-gevent", "api.task"]
        env:
          - name: MONGO_URI
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: MONGO_URI
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: SECRET_KEY
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PROWLARR_API_KEY
          - name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: REDIS_URL
          - name: db_max_connections
            value: "30"
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "200m"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr-deployment
spec:
  replicas: 5
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: config-setup
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - >
            until curl -o /config/config.xml https://raw.githubusercontent.com/mhdzumair/MediaFusion/main/resources/xml/prowlarr-config.xml; do
              echo "Failed to download config file. Retrying...";
              sleep 3;
            done;
            echo "Config file downloaded successfully.";
            sed -i 's/$PROWLARR_API_KEY/'"$PROWLARR_API_KEY"'/g' /config/config.xml;
            chmod 664 /config/config.xml;
            echo "Prowlarr config setup complete.";
        volumeMounts:
          - name: config-volume
            mountPath: /config
        env:
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PROWLARR_API_KEY
      containers:
      - name: prowlarr
        image: ghcr.io/hotio/prowlarr:latest
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
        env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: UMASK
            value: "002"
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PROWLARR_API_KEY
        ports:
          - containerPort: 9696
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - 'curl -H "X-API-KEY: $PROWLARR_API_KEY" http://localhost:9696/api/v1/health'
          initialDelaySeconds: 60
          periodSeconds: 60
          failureThreshold: 5
          timeoutSeconds: 10
        volumeMounts:
          - name: config-volume
            mountPath: /config
      - name: setup-indexers
        image: apteno/alpine-jq:latest
        command: ["/bin/sh", "-c"]
        args:
          - >
            echo "Waiting for Prowlarr to be ready...";
            until curl -f -H "X-API-KEY: $PROWLARR_API_KEY" http://localhost:9696/api/v1/health; do
              sleep 5;
            done;
            echo "Prowlarr is ready, setting up indexers...";
            until curl -o prowlarr-indexers.json https://raw.githubusercontent.com/mhdzumair/MediaFusion/main/resources/json/prowlarr-indexers.json; do
              echo "Failed to download indexers file. Retrying...";
              sleep 3;
            done;
            jq -c '.[]' prowlarr-indexers.json | while read indexer; do
              echo "Adding indexer named: $(echo $indexer | jq -r '.name')";
              curl -H "Content-Type: application/json" -H "X-API-KEY: $PROWLARR_API_KEY" -X POST http://localhost:9696/api/v1/indexer -d "$indexer";
            done;
            echo "Indexers setup complete.";
            sleep infinity;
        env:
          - name: PROWLARR_API_KEY
            valueFrom:
              secretKeyRef:
                name: mediafusion-secrets
                key: PROWLARR_API_KEY
        volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
        - name: config-volume
          emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxybroker-deployment
spec:
  replicas: 0
  selector:
    matchLabels:
      app: proxybroker
  template:
    metadata:
      labels:
        app: proxybroker
    spec:
      containers:
      - name: proxybroker
        image: bluet/proxybroker2:latest
        args: ["serve", "--host", "0.0.0.0", "--port", "8888", "--types", "HTTP", "HTTPS", "--lvl", "High", "--min-queue", "5"]
        ports:
        - containerPort: 8888
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "200m"
            memory: "200Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: mediafusion-service
spec:
  selector:
    app: mediafusion
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  name: prowlarr-service
spec:
  selector:
    app: prowlarr
  ports:
    - protocol: TCP
      port: 9696
      targetPort: 9696

---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: proxybroker-service
spec:
  selector:
    app: proxybroker
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mediafusion-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mediafusion-deployment
  minReplicas: 5
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
